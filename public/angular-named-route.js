angular.module("ngNamedRoute",[]),angular.module("ngNamedRoute").directive("namedRoute",["$location","namedRouteService",function(e,r){"use strict";return{restrict:"A",scope:{name:"=namedRoute",args:"=routeParams",query_params:"=routeQueryParams"},link:function(n,t){function a(){void 0!==n.name&&t.attr("href",(e.$$html5?"":"#"+r.hashPrefix())+r.reverse(n.name,n.args,n.query_params))}n.$watch("name",a),n.$watch("args",a,!0),n.$watch("query_params",a,!0)}}}]),angular.module("ngNamedRoute").provider("namedRouteService",["$locationProvider",function(e){"use strict";this.$get=["$route","$location","$browser",function(r,n,t){function a(e,r,n){var a,u=-1;if(!o.hasOwnProperty(e))throw new Error("Route name ["+e+"] not known.");return a=o[e].path.replace(/(:\w+[\*\?]{0,1})/g,function(e,n){u++,n=n.substring(1);var t="?"===n[n.length-1]?"":"?";return"*"!==n[n.length-1]&&"?"!==n[n.length-1]||(n=n.substring(0,n.length-1)),angular.isArray(r)?u<r.length?r[u]:t:angular.isObject(r)?r.hasOwnProperty(n)?r[n]:t:u?"?":void 0===r?t:r}),n&&(a+="?"+Object.keys(n).map(function(e){var r=n[e];return angular.isArray(r)?r.map(function(r){return e+"="+encodeURIComponent(r)}).join("&"):e+"="+encodeURIComponent(r)}).join("&")),"/"===t.baseHref()?a:t.baseHref()+a}var o={};return Object.keys(r.routes).forEach(function(e){var n=r.routes[e];if(n.name){if(o.hasOwnProperty(n.name))throw new Error("Route name ["+n.name+"] defined more than once.");o[n.name]={path:e,route:n}}}),{reverse:a,open:function(e,r){n.path(a(e,r))},hashPrefix:function(){return e.hashPrefix()}}}]}]);